<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PC_BUILD_DEF">


	<resultMap class="com.aic.paas.dev.provider.bean.PcBuildDef" id="queryResult">
		<result column="ID" jdbcType="BIGINT" property="id"/>	<!-- ID -->
		<result column="MNT_ID" jdbcType="BIGINT" property="mntId"/>	<!-- 所属租户 -->
		<result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName"/>	<!-- 构建名 -->
		<result column="PRODUCT_ID" jdbcType="BIGINT" property="productId"/>	<!-- 所属产品 -->
		<result column="PROJECT_ID" jdbcType="BIGINT" property="projectId"/>	<!-- 所属工程 -->
		<result column="IS_EXTERNAL" jdbcType="INTEGER" property="isExternal"/>	<!-- 是否外部工程 -->
		<result column="RESP_TYPE" jdbcType="INTEGER" property="respType"/>	<!-- 代码库类型 -->
		<result column="RESP_URL" jdbcType="VARCHAR" property="respUrl"/>	<!-- 代码库URL -->
		<result column="RESP_USER" jdbcType="VARCHAR" property="respUser"/>	<!-- 代码库账号 -->
		<result column="RESP_PWD" jdbcType="VARCHAR" property="respPwd"/>	<!-- 代码库密码 -->
		<result column="BUILD_CMD" jdbcType="VARCHAR" property="buildCmd"/>	<!-- 构建命令 -->
		<result column="IS_SUPPORT_HOOK" jdbcType="INTEGER" property="isSupportHook"/>	<!-- 是否支持HOOK -->
		<result column="IS_BUILD_IMAGE" jdbcType="INTEGER" property="isBuildImage"/>	<!-- 是否生成镜像 -->
		<result column="IMAGE_DEF_ID" jdbcType="BIGINT" property="imageDefId"/>	<!-- 镜像定义ID -->
		<result column="DOCKER_FILE_PATH" jdbcType="VARCHAR" property="dockerFilePath"/>	<!-- DOCKER_FILE路径 -->
		<result column="IS_AUTO_PUSH_1" jdbcType="INTEGER" property="isAutoPush1"/>	<!-- 是否自动推送至开发环境 -->
		<result column="DATA_CENTER_ID" jdbcType="BIGINT" property="dataCenterId"/>	<!-- 开发环境数据中心 -->
		<result column="RES_CENTER_ID" jdbcType="BIGINT" property="resCenterId"/>	<!-- 开发环境资源中心 -->
		<result column="DATA_STATUS" jdbcType="INTEGER" property="dataStatus"/>	<!-- 数据状态 -->
		<result column="CREATOR" jdbcType="VARCHAR" property="creator"/>	<!-- 创建人 -->
		<result column="CREATE_TIME" jdbcType="BIGINT" property="createTime"/>	<!-- 创建时间 -->
		<result column="MODIFIER" jdbcType="VARCHAR" property="modifier"/>	<!-- 修改人 -->
		<result column="MODIFY_TIME" jdbcType="BIGINT" property="modifyTime"/>	<!-- 修改时间 -->
	</resultMap>
	

	<sql id="sql_query_where">
		<isNotEmpty prepend="and" property="cdt.id" >
			ID = #cdt.id:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids" >
			ID in ($ids$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startId" >
			<![CDATA[ ID >= #cdt.startId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endId" >
			<![CDATA[ ID <= #cdt.endId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.mntId" >
			MNT_ID = #cdt.mntId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="mntIds" >
			MNT_ID in ($mntIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startMntId" >
			<![CDATA[ MNT_ID >= #cdt.startMntId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endMntId" >
			<![CDATA[ MNT_ID <= #cdt.endMntId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.buildName" >
			BUILD_NAME like #cdt.buildName:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.buildNameEqual" >
			BUILD_NAME = #cdt.buildNameEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="buildNames" >
			BUILD_NAME in ($buildNames$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.productId" >
			PRODUCT_ID = #cdt.productId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="productIds" >
			PRODUCT_ID in ($productIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startProductId" >
			<![CDATA[ PRODUCT_ID >= #cdt.startProductId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endProductId" >
			<![CDATA[ PRODUCT_ID <= #cdt.endProductId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.projectId" >
			PROJECT_ID = #cdt.projectId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="projectIds" >
			PROJECT_ID in ($projectIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startProjectId" >
			<![CDATA[ PROJECT_ID >= #cdt.startProjectId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endProjectId" >
			<![CDATA[ PROJECT_ID <= #cdt.endProjectId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.isExternal" >
			IS_EXTERNAL = #cdt.isExternal:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="isExternals" >
			IS_EXTERNAL in ($isExternals$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startIsExternal" >
			<![CDATA[ IS_EXTERNAL >= #cdt.startIsExternal:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endIsExternal" >
			<![CDATA[ IS_EXTERNAL <= #cdt.endIsExternal:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respType" >
			RESP_TYPE = #cdt.respType:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="respTypes" >
			RESP_TYPE in ($respTypes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startRespType" >
			<![CDATA[ RESP_TYPE >= #cdt.startRespType:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endRespType" >
			<![CDATA[ RESP_TYPE <= #cdt.endRespType:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respUrl" >
			RESP_URL like #cdt.respUrl:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respUser" >
			RESP_USER like #cdt.respUser:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respUserEqual" >
			RESP_USER = #cdt.respUserEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="respUsers" >
			RESP_USER in ($respUsers$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respPwd" >
			RESP_PWD like #cdt.respPwd:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.respPwdEqual" >
			RESP_PWD = #cdt.respPwdEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="respPwds" >
			RESP_PWD in ($respPwds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.buildCmd" >
			BUILD_CMD like #cdt.buildCmd:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.isSupportHook" >
			IS_SUPPORT_HOOK = #cdt.isSupportHook:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="isSupportHooks" >
			IS_SUPPORT_HOOK in ($isSupportHooks$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startIsSupportHook" >
			<![CDATA[ IS_SUPPORT_HOOK >= #cdt.startIsSupportHook:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endIsSupportHook" >
			<![CDATA[ IS_SUPPORT_HOOK <= #cdt.endIsSupportHook:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.isBuildImage" >
			IS_BUILD_IMAGE = #cdt.isBuildImage:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="isBuildImages" >
			IS_BUILD_IMAGE in ($isBuildImages$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startIsBuildImage" >
			<![CDATA[ IS_BUILD_IMAGE >= #cdt.startIsBuildImage:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endIsBuildImage" >
			<![CDATA[ IS_BUILD_IMAGE <= #cdt.endIsBuildImage:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.imageDefId" >
			IMAGE_DEF_ID = #cdt.imageDefId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="imageDefIds" >
			IMAGE_DEF_ID in ($imageDefIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startImageDefId" >
			<![CDATA[ IMAGE_DEF_ID >= #cdt.startImageDefId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endImageDefId" >
			<![CDATA[ IMAGE_DEF_ID <= #cdt.endImageDefId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dockerFilePath" >
			DOCKER_FILE_PATH like #cdt.dockerFilePath:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.isAutoPush1" >
			IS_AUTO_PUSH_1 = #cdt.isAutoPush1:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="isAutoPush1s" >
			IS_AUTO_PUSH_1 in ($isAutoPush1s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startIsAutoPush1" >
			<![CDATA[ IS_AUTO_PUSH_1 >= #cdt.startIsAutoPush1:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endIsAutoPush1" >
			<![CDATA[ IS_AUTO_PUSH_1 <= #cdt.endIsAutoPush1:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataCenterId" >
			DATA_CENTER_ID = #cdt.dataCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataCenterIds" >
			DATA_CENTER_ID in ($dataCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataCenterId" >
			<![CDATA[ DATA_CENTER_ID >= #cdt.startDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataCenterId" >
			<![CDATA[ DATA_CENTER_ID <= #cdt.endDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.resCenterId" >
			RES_CENTER_ID = #cdt.resCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="resCenterIds" >
			RES_CENTER_ID in ($resCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startResCenterId" >
			<![CDATA[ RES_CENTER_ID >= #cdt.startResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endResCenterId" >
			<![CDATA[ RES_CENTER_ID <= #cdt.endResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataStatus" >
			DATA_STATUS = #cdt.dataStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataStatuss" >
			DATA_STATUS in ($dataStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataStatus" >
			<![CDATA[ DATA_STATUS >= #cdt.startDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataStatus" >
			<![CDATA[ DATA_STATUS <= #cdt.endDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.creator" >
			CREATOR like #cdt.creator:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.createTime" >
			CREATE_TIME = #cdt.createTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="createTimes" >
			CREATE_TIME in ($createTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCreateTime" >
			<![CDATA[ CREATE_TIME >= #cdt.startCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCreateTime" >
			<![CDATA[ CREATE_TIME <= #cdt.endCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifier" >
			MODIFIER like #cdt.modifier:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifyTime" >
			MODIFY_TIME = #cdt.modifyTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="modifyTimes" >
			MODIFY_TIME in ($modifyTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startModifyTime" >
			<![CDATA[ MODIFY_TIME >= #cdt.startModifyTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endModifyTime" >
			<![CDATA[ MODIFY_TIME <= #cdt.endModifyTime:BIGINT# ]]>
		</isNotEmpty>
	</sql>
	

	<sql id="sql_update_columns">
		<isNotNull prepend="," property="record.id"> 
			ID = #record.id:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.mntId"> 
			MNT_ID = #record.mntId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.buildName"> 
			BUILD_NAME = #record.buildName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.productId"> 
			PRODUCT_ID = #record.productId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.projectId"> 
			PROJECT_ID = #record.projectId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.isExternal"> 
			IS_EXTERNAL = #record.isExternal:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.respType"> 
			RESP_TYPE = #record.respType:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.respUrl"> 
			RESP_URL = #record.respUrl:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.respUser"> 
			RESP_USER = #record.respUser:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.respPwd"> 
			RESP_PWD = #record.respPwd:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.buildCmd"> 
			BUILD_CMD = #record.buildCmd:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.isSupportHook"> 
			IS_SUPPORT_HOOK = #record.isSupportHook:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.isBuildImage"> 
			IS_BUILD_IMAGE = #record.isBuildImage:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.imageDefId"> 
			IMAGE_DEF_ID = #record.imageDefId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.dockerFilePath"> 
			DOCKER_FILE_PATH = #record.dockerFilePath:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.isAutoPush1"> 
			IS_AUTO_PUSH_1 = #record.isAutoPush1:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.dataCenterId"> 
			DATA_CENTER_ID = #record.dataCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.resCenterId"> 
			RES_CENTER_ID = #record.resCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.dataStatus"> 
			DATA_STATUS = #record.dataStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.creator"> 
			CREATOR = #record.creator:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.createTime"> 
			CREATE_TIME = #record.createTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.modifier"> 
			MODIFIER = #record.modifier:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.modifyTime"> 
			MODIFY_TIME = #record.modifyTime:BIGINT#
		</isNotNull>
	</sql>
	

	<sql id="sql_query_columns">
		ID, MNT_ID, BUILD_NAME, PRODUCT_ID, PROJECT_ID, IS_EXTERNAL, 
		RESP_TYPE, RESP_URL, RESP_USER, RESP_PWD, BUILD_CMD, IS_SUPPORT_HOOK, 
		IS_BUILD_IMAGE, IMAGE_DEF_ID, DOCKER_FILE_PATH, IS_AUTO_PUSH_1, DATA_CENTER_ID, RES_CENTER_ID, 
		DATA_STATUS, CREATOR, CREATE_TIME, MODIFIER, MODIFY_TIME
	</sql>
	

	

	<select id="selectList" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PC_BUILD_DEF.sql_query_columns" />
		from PC_BUILD_DEF 
			<dynamic prepend="where" >
				<include refid="PC_BUILD_DEF.sql_query_where"/>
			</dynamic>
		order by 
			<isNotEmpty property="orders" >
				$orders$
			</isNotEmpty>
			<isEmpty property="orders" >
				ID
			</isEmpty>
	</select>
	<select id="selectCount" parameterClass="java.util.Map" resultClass="java.lang.Long">
		select count(1) from PC_BUILD_DEF 
			<dynamic prepend="where" >
				<include refid="PC_BUILD_DEF.sql_query_where"/>
			</dynamic>
	</select>
	<select id="selectById" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PC_BUILD_DEF.sql_query_columns" />
		from PC_BUILD_DEF where ID=#id:BIGINT# and DATA_STATUS=1  
	</select>
	

	

	<insert id="insert" parameterClass="java.util.Map">
		insert into PC_BUILD_DEF(
			ID, MNT_ID, BUILD_NAME, PRODUCT_ID, PROJECT_ID, 
			IS_EXTERNAL, RESP_TYPE, RESP_URL, RESP_USER, RESP_PWD, 
			BUILD_CMD, IS_SUPPORT_HOOK, IS_BUILD_IMAGE, IMAGE_DEF_ID, DOCKER_FILE_PATH, 
			IS_AUTO_PUSH_1, DATA_CENTER_ID, RES_CENTER_ID, DATA_STATUS, CREATOR, 
			CREATE_TIME, MODIFIER, MODIFY_TIME)
		values (
			#record.id:BIGINT#, #record.mntId:BIGINT#, #record.buildName:VARCHAR#, #record.productId:BIGINT#, #record.projectId:BIGINT#, 
			#record.isExternal:INTEGER#, #record.respType:INTEGER#, #record.respUrl:VARCHAR#, #record.respUser:VARCHAR#, #record.respPwd:VARCHAR#, 
			#record.buildCmd:VARCHAR#, #record.isSupportHook:INTEGER#, #record.isBuildImage:INTEGER#, #record.imageDefId:BIGINT#, #record.dockerFilePath:VARCHAR#, 
			#record.isAutoPush1:INTEGER#, #record.dataCenterId:BIGINT#, #record.resCenterId:BIGINT#, #record.dataStatus:INTEGER#, #record.creator:VARCHAR#, 
			#record.createTime:BIGINT#, #record.modifier:VARCHAR#, #record.modifyTime:BIGINT#)
	</insert>
	

	

	<update id="updateById" parameterClass="java.util.Map">
		update PC_BUILD_DEF
			<dynamic prepend="set" > 
				<include refid="PC_BUILD_DEF.sql_update_columns"/> 
			</dynamic>
		where ID = #id:BIGINT#
	</update>
	<update id="updateByCdt" parameterClass="java.util.Map">
		update PC_BUILD_DEF
			<dynamic prepend="set" > 
				<include refid="PC_BUILD_DEF.sql_update_columns"/> 
			</dynamic>
			<dynamic prepend="where" > 
				<include refid="PC_BUILD_DEF.sql_query_where"/> 
			</dynamic>
	</update>
	
	

	

	<delete id="deleteById" parameterClass="java.util.Map">
		delete from PC_BUILD_DEF where ID = #id:BIGINT#
	</delete>
	<delete id="deleteByCdt" parameterClass="java.util.Map">
		delete from PC_BUILD_DEF
			<dynamic prepend="where" > 
				<include refid="PC_BUILD_DEF.sql_query_where"/> 
			</dynamic>
	</delete>
	



</sqlMap>
